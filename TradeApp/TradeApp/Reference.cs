//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradeApp.ConnectorService
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PricePoint", Namespace = "http://schemas.datacontract.org/2004/07/ClearingConnector.DataAccessLayer")]
    [System.SerializableAttribute()]
    public partial class PricePoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double _AmountField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal _PriceField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset _TimeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double _Amount
        {
            get
            {
                return this._AmountField;
            }
            set
            {
                if ((this._AmountField.Equals(value) != true))
                {
                    this._AmountField = value;
                    this.RaisePropertyChanged("_Amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal _Price
        {
            get
            {
                return this._PriceField;
            }
            set
            {
                if ((this._PriceField.Equals(value) != true))
                {
                    this._PriceField = value;
                    this.RaisePropertyChanged("_Price");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset _Time
        {
            get
            {
                return this._TimeField;
            }
            set
            {
                if ((this._TimeField.Equals(value) != true))
                {
                    this._TimeField = value;
                    this.RaisePropertyChanged("_Time");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ConnectorService.IConnectorService")]
    public interface IConnectorService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/GetKrakenPricePoints", ReplyAction = "http://tempuri.org/IConnectorService/GetKrakenPricePointsResponse")]
        System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint> GetKrakenPricePoints();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/GetKrakenPricePoints", ReplyAction = "http://tempuri.org/IConnectorService/GetKrakenPricePointsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint>> GetKrakenPricePointsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/GetPricePointsByDate", ReplyAction = "http://tempuri.org/IConnectorService/GetPricePointsByDateResponse")]
        System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint> GetPricePointsByDate(System.DateTime start, System.Nullable<System.DateTime> end);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/GetPricePointsByDate", ReplyAction = "http://tempuri.org/IConnectorService/GetPricePointsByDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint>> GetPricePointsByDateAsync(System.DateTime start, System.Nullable<System.DateTime> end);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/HelloWorld", ReplyAction = "http://tempuri.org/IConnectorService/HelloWorldResponse")]
        string HelloWorld();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IConnectorService/HelloWorld", ReplyAction = "http://tempuri.org/IConnectorService/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectorServiceChannel : TradeApp.ConnectorService.IConnectorService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectorServiceClient : System.ServiceModel.ClientBase<TradeApp.ConnectorService.IConnectorService>, TradeApp.ConnectorService.IConnectorService
    {

        public ConnectorServiceClient()
        {
        }

        public ConnectorServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ConnectorServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ConnectorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ConnectorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint> GetKrakenPricePoints()
        {
            return base.Channel.GetKrakenPricePoints();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint>> GetKrakenPricePointsAsync()
        {
            return base.Channel.GetKrakenPricePointsAsync();
        }

        public System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint> GetPricePointsByDate(System.DateTime start, System.Nullable<System.DateTime> end)
        {
            return base.Channel.GetPricePointsByDate(start, end);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<TradeApp.ConnectorService.PricePoint>> GetPricePointsByDateAsync(System.DateTime start, System.Nullable<System.DateTime> end)
        {
            return base.Channel.GetPricePointsByDateAsync(start, end);
        }

        public string HelloWorld()
        {
            return base.Channel.HelloWorld();
        }

        public System.Threading.Tasks.Task<string> HelloWorldAsync()
        {
            return base.Channel.HelloWorldAsync();
        }
    }
}
